#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
APOLLO_DIR=/opt/apolloapi

sudo chown -R futurebit $APOLLO_DIR

### NVM ###
echo -e "Installing nvm..."

if [ -e ~/.nvm/nvm.sh ]
then
	echo "nvm installed yet"
else
	echo "Installing nvm"
	cd ~/
	git clone https://github.com/creationix/nvm.git .nvm
	cd ~/.nvm
	git checkout v0.33.11
fi

. ~/.nvm/nvm.sh

nvm install 9.8.0
nvm alias default 9.8.0

### SYSTEMD ###
echo -e "Installing systemd..."

sudo cp $DIR/apollo.service /etc/systemd/system/
sudo cp $DIR/bfgminer.service /etc/systemd/system/

sudo systemctl daemon-reload

sudo systemctl enable apollo
sudo systemctl enable bfgminer

grep -q -F "$APOLLO_DIR/scripts/firewall" /etc/rc.local || sudo sed -i "\$i \/opt\/apolloapi\/scripts\/firewall" /etc/rc.local

### SYSTEM ###
echo "Configuring system..."

sudo mkdir -p /var/local/apollo/hwmon
sudo chown futurebit /var/local/apollo/hwmon
if [ -s $APOLLO_DIR/bfgminer.conf ]
then
	echo "Bfgminer.conf exists"
else
	sudo cp $APOLLO_DIR/scripts/bfgminer.conf /opt/
fi
sudo chown futurebit /opt/bfgminer.conf

### UI ###
echo "Updating submodule..."

cd $APOLLO_DIR
git submodule init 
git submodule update --recursive --remote

### API ###
echo "Decompress API build (could take few minutes)..."

tar xzf build/futurebit.tar.gz -C $APOLLO_DIR/

### START ###
echo "Starting Apollo App..."

sudo bash $APOLLO_DIR/scripts/firewall

sudo systemctl start apollo

echo -e "Installation complete"